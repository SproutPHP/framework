{# SproutPHP Component: navbar.twig #}
<header>
	<a href="/" class="logo-row">
		<img src="{{ assets('img/logo.png') }}" alt="SproutPHP Logo" class="logo-img"/>
		<span class="brand">SproutPHP</span>
	</a>
	<nav>
		<a href="https://sproutphp.github.io/about.html" class="nav-link" target="_blank">About</a>
		<a href="https://sproutphp.github.io/documentation/" class="nav-link" target="_blank">Docs</a>
		<a href="https://github.com/sponsors/yanikkumar" class="sponsor-btn" target="_blank" rel="noopener">&#10084; Sponsor Creator</a>
		<a href="https://github.com/SproutPHP/framework" class="stars-btn" target="_blank" rel="noopener">
			<svg height="18" viewbox="0 0 16 16" fill="currentColor" style="vertical-align: middle">
				<path d="M8 12.027l-3.717 2.21.711-4.15-3.02-2.944 4.166-.605L8 2.5l1.86 3.99 4.166.605-3.02 2.944.711 4.15z"></path>
			</svg>
			Stars
			<span id="star-count">...</span>
		</a>
		<button class="toggle-btn" id="theme-toggle" title="Toggle dark/light mode">🌙</button>
	</nav>
</header>
<script>
	(function () {
const themeBtn = document.getElementById('theme-toggle');
const themeIcon = themeBtn;
const html = document.documentElement;
if (! themeBtn || ! themeIcon) 
return;



function setInitialTheme() {
let theme = localStorage.getItem('theme');
if (! theme) {
theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
}
html.setAttribute('data-theme', theme);
themeIcon.textContent = theme === 'dark' ? '🌙' : '☀️';
}
setInitialTheme();
themeBtn.addEventListener('click', function () {
const currentTheme = html.getAttribute('data-theme');
const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
html.setAttribute('data-theme', newTheme);
localStorage.setItem('theme', newTheme);
themeIcon.textContent = newTheme === 'dark' ? '🌙' : '☀️';
});
})();
// Fetch GitHub star count and update #star-count
(function () {
const starCountSpan = document.getElementById('star-count');
if (! starCountSpan) 
return;



fetch('https://api.github.com/repos/SproutPHP/framework').then(response => response.json()).then(data => {
if (data.stargazers_count !== undefined) {
starCountSpan.textContent = data.stargazers_count;
}
}).catch(() => { /* ignore errors, keep default */
});
})();
</script>
